/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import databaseKamarr.*;

import static hotel.dataPelanggan.nomorKamarD;
import static hotel.reguler.nomorRe;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;

/**
 *
 * @author HERU A
 */
public class formCheckIn extends javax.swing.JDialog {
    

    /**
     * Creates new form formCheckIn
     */
   
    
    public formCheckIn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kolomNama = new javax.swing.JTextField();
        kolomNik = new javax.swing.JTextField();
        kolomID = new javax.swing.JTextField();
        kolomLahir = new javax.swing.JTextField();
        kolomTempatLahir = new javax.swing.JTextField();
        kolomTanggalBook = new javax.swing.JTextField();
        kolomKelas = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tombolSimpan = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kolomNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomNamaActionPerformed(evt);
            }
        });
        getContentPane().add(kolomNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, 190, -1));
        getContentPane().add(kolomNik, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 190, -1));
        getContentPane().add(kolomID, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 270, 190, 20));
        getContentPane().add(kolomLahir, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 190, -1));
        getContentPane().add(kolomTempatLahir, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 190, -1));
        getContentPane().add(kolomTanggalBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 190, 40));

        kolomKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomKelasActionPerformed(evt);
            }
        });
        getContentPane().add(kolomKelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 510, 190, -1));

        jLabel9.setText("check in");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(726, 20, 61, -1));

        tombolSimpan.setText("simpan");
        tombolSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(tombolSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 543, 90, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon("H:\\Backup\\Kasar-3x.gif")); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1160, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kolomNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomNamaActionPerformed
        // TODO add your handling code here:
       
        
        
    }//GEN-LAST:event_kolomNamaActionPerformed

    private void kolomKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomKelasActionPerformed
     
    }//GEN-LAST:event_kolomKelasActionPerformed

    private void tombolSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSimpanActionPerformed
        // TODO add your handling code here:
        
        
        String kelas= kolomKelas.getText();
        pelanggan p1=new pelanggan(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),"",kelas,nomorRe);
        
        if(kelas.equalsIgnoreCase("reguler")){
            
            try { 
                databaseKamarr db=new databaseKamarr();
                
                reguler reg=new reguler("checkin",100000,"reguler",nomorRe);
                db.dbR();
                 try {           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);

           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),"",kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("100000"); 
                 bufferedWriter.newLine();
                 
           }
            bufferedWriter.close();
                
        } catch (IOException e) {
             e.printStackTrace();
        } 
            
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if(kelas.equalsIgnoreCase("premium")){
           
            try {
                premium pre=new premium("checkin",200000,"premium",nomorRe);
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            databaseKamarr dbp=new databaseKamarr();
            dbp.dbP();
            try {
                
                
                File inputTemp = new File("database1\\pelanggan.txt");
                
                FileWriter writer = new FileWriter(inputTemp, true);
                
                BufferedWriter bufferedWriter = new BufferedWriter(writer);
                bufferedWriter.newLine();
                dataPelanggan dlr=new dataPelanggan();
                dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),"",kelas,nomorRe);
                for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("200000"); 
                 bufferedWriter.newLine();
                }
                bufferedWriter.close();
                
            } catch (IOException e) {
                e.printStackTrace();
            }
            
        }
        else if(kelas.equalsIgnoreCase("suite")){
            try { 
                databaseKamarr dbs=new databaseKamarr(); 
                suite s=new suite("checkin",350000,"suite",nomorRe);
                dbs.dbS();
             try {
          
           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.newLine();
           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),"",kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("350000"); 
                 bufferedWriter.newLine();
           }
            bufferedWriter.close();
              
        } catch (IOException e) {
             e.printStackTrace();
        } 
     
    
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if(kelas.equalsIgnoreCase("vip")){
            try {  
                databaseKamarr dbv=new databaseKamarr();
                vip vip=new vip("checkin",750000,"vip",nomorRe);
                dbv.dbV();
                 try {
          
           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.newLine();
           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),"",kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write(pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("750000"); 
                 bufferedWriter.newLine();
           }
            bufferedWriter.close();
              
        } catch (IOException e) {
             e.printStackTrace();
        } 
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }
        
    }//GEN-LAST:event_tombolSimpanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                formCheckIn dialog = new formCheckIn(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField kolomID;
    private javax.swing.JTextField kolomKelas;
    private javax.swing.JTextField kolomLahir;
    private javax.swing.JTextField kolomNama;
    private javax.swing.JTextField kolomNik;
    private javax.swing.JTextField kolomTanggalBook;
    private javax.swing.JTextField kolomTempatLahir;
    private javax.swing.JButton tombolSimpan;
    // End of variables declaration//GEN-END:variables
}
